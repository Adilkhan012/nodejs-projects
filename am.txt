start
{ from: '0x40ed225c98F40956E717e2125615F47e7948E1E2' }
{
  method: {
    call: [Function: bound _executeMethod] {
      request: [Function: bound _executeMethod]
    },
    send: [Function: bound _executeMethod] {
      request: [Function: bound _executeMethod]
    },
    encodeABI: [Function: bound _encodeMethodABI],
    estimateGas: [Function: bound _executeMethod],
    createAccessList: [Function: bound _executeMethod],
    arguments: [ 5 ],
    _method: {
      inputs: [Array],
      name: 'buyHodlerz',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
      constant: undefined,
      payable: true,
      signature: '0xe788f22b'
    },
    _parent: Contract {
      setProvider: [Function (anonymous)],
      currentProvider: [Getter/Setter],
      _requestManager: [RequestManager],
      givenProvider: null,
      providers: [Object],
      _provider: [HDWalletProvider],
      setRequestManager: [Function (anonymous)],
      BatchRequest: [Function: bound Batch],
      extend: [Function],
      clearSubscriptions: [Function (anonymous)],
      options: [Object],
      handleRevert: [Getter/Setter],
      defaultCommon: [Getter/Setter],
      defaultHardfork: [Getter/Setter],
      defaultChain: [Getter/Setter],
      transactionPollingTimeout: [Getter/Setter],
      transactionPollingInterval: [Getter/Setter],
      transactionConfirmationBlocks: [Getter/Setter],
      transactionBlockTimeout: [Getter/Setter],
      blockHeaderTimeout: [Getter/Setter],
      defaultAccount: [Getter/Setter],
      defaultBlock: [Getter/Setter],
      methods: [Object],
      events: [Object],
      _address: '0x307511202d545B9C9147d1aff910d14738e9e05a',
      _jsonInterface: [Array]
    },
    _ethAccounts: Accounts {
      currentProvider: [Getter/Setter],
      _requestManager: [RequestManager],
      givenProvider: null,
      providers: [Object],
      _provider: [HDWalletProvider],
      setProvider: [Function (anonymous)],
      setRequestManager: [Function (anonymous)],
      _ethereumCall: [Object],
      wallet: [Wallet]
    }
  }
}
